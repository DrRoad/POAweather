#+TITLE:POAweather overview 
#+AUTHOR: Ivan Hanigan
#+email: ivan.hanigan@anu.edu.au
#+LaTeX_CLASS: article
#+LaTeX_CLASS_OPTIONS: [a4paper]
-----
#+name:date
#+begin_src R :session *R* :tangle src/date.r :exports none :eval no
  ###########################################################################
  # newnode: date
  Sys.Date()
#+end_src

* Introduction
This is the data related to Hanigan I, Hall G, Dear KBG. A comparison
of methods for calculating population exposure estimates of daily
weather for health research. International Journal of Health
Geographics 2006;5(38) DOI: 10.1186/1476-072X-5-38

* Tools
** postIDW

* Data
The source data for Hanigan 2006 are archived and this process is documented here.
The data framework is revised for ongoing work for the SWISH-EWEDB project.  
** Hanigan2006
*** Zones
Upload to http://dc-geoserve.anu.edu.au:8081/geoserver
from M:/Climate_Data/Projects/GE_CLIM/3_Meteorology/districts
*** poa grouped into climatic zones
**** original in albers
***** uploading the data requires generating the psql code
#+name:upload POA-grouped-climate-zones
#+begin_src R :session *R* :tangle src/upload POA-grouped-climate-zones.r :exports none :eval no
  #######################################################################
  # name: upload POA-grouped-climate-zones
  # func
  
  shp2pgisBAT=function(infile,d='postgis',u='postgres',host='localhost',srid=4283,schema='public',
   pgutils = 'C:\\pgutils\\'){
          cat(paste("\"",pgutils,"shp2pgsql\" -s ",srid," -D %1.shp ",schema,".%1 > %1.sql",sep=""),"\n")
          cat(paste("\"",pgutils,"psql\"  -d ",d," -U ",u," -W -h ",host," -f %1.sql",sep=""),"\n")
          cat('make doshp.bat\n\n')
          cat(paste("doshp.bat ",infile,sep=""))
      cat(paste("\n\nCREATE INDEX idx_",infile,"_the_geom ON ",schema,".",infile," USING gist(the_geom);\n",sep=""))
      cat(paste("VACUUM ANALYZE ",schema,".",infile,";\n",sep=""))
      
          cat(paste("CREATE INDEX \"",infile,"_gist\"
          ON ",schema,".",infile,"
          USING gist
          (the_geom);
          ALTER TABLE ",schema,".",infile," CLUSTER ON \"",infile,"_gist\";\n",sep=""))
  
                  
          if (srid!=4283){                     
                  cat(
                  sprintf("SELECT AddGeometryColumn('%s','%s','gda94_geom',4283,'MULTIPOLYGON',2);
                  ALTER TABLE %s.\"%s\" DROP CONSTRAINT enforce_geotype_gda94_geom;
                  UPDATE %s.\"%s\" SET gda94_geom=ST_Transform(the_geom,4283);",
                  tolower(schema),tolower(infile),tolower(schema),tolower(infile),tolower(schema),tolower(infile))
                  )                     
          }
  
          
          }
  
  # load asgc
  rootdir="M:/Climate_Data/Projects/GE_CLIM/3_Meteorology/districts"
  
 # dir("i:/tools")
 # source("i:/tools/load2postgres.R")
  ls()
  
  db='geodb'
  uid='geouser'
  hoster='130.56.60.77'
  grant2='public'
  sch='public'
  # srid?
  ## SELECT srid, auth_name, auth_srid, srtext, proj4text
  ##   FROM spatial_ref_sys
  ##   where srtext like '%Albers%';
  srid = 3577
  #2001
  shp2pgisBAT(infile="POA01_METDIST_FINAL_DISSOLVE",d=db,u=uid,host=hoster,
  srid=4283,schema=sch)
  
  # sqlQuery(ch,"comment on table abs_geography.auspoa01 is 'ABS Postal Areas 2001'") 
  
  
#+end_src
***** then do the generated code from a terminal
#+name:shp2pgis bat
#+begin_src R :session *R* :tangle src/shp2pgis bat.r :exports none :eval no
#######################################################################
# name: shp2pgis bat
"C:\pgutils\shp2pgsql" -s 3577 -D %1.shp public.%1 > %1.sql 
"C:\pgutils\psql"  -d geodb -U geouser -W -h 130.56.60.77 -f %1.sql 
#make doshp.bat

# doshp.bat POA01_METDIST_FINAL_DISSOLVE
#+end_src
***** now follow the geosever instructions
http://docs.geoserver.org/stable/en/user/gettingstarted/postgis-quickstart/index.html

**** got ArcGIS to reproject in GDA94
***** upload using Linux
#+name:shp2psql
#+begin_src sh :session *shell2* :tangle src/shp2psql.r :exports none :eval yes
################################################################
# name:shp2psql
cd ~/projects/POAweather/data/reprojected/
shp2pgsql -s 4283 -D POA01_METDIST_FINAL_DISSOLVE_GDA94.shp public.POA01_METDIST_FINAL_DISSOLVE_GDA94 > POA01_METDIST_FINAL_DISSOLVE_GDA94.sql
# psql -d geodb -U geouser -W -h 130.56.60.77 -f POA01_METDIST_FINAL_DISSOLVE_GDA94.sql
# warning terminal not fully functional?  ran from normal terminal?
# actually only worked on windows
#+end_src

#+RESULTS: shp2psql
***** realise need PDENS
#+name:upload PDENS
#+begin_src R :session *R* :tangle src/upload PDENS.r :exports none :eval no
  ###########################################################################
  # newnode: upload PDENS
  require(ProjectTemplate)
  source('~/tools/disentangle/src/connect2postgres.r')
  source('~/tools/delphe-project/tools/fixGeom.r')
  ch <- connect2postgres(hostip='130.56.60.77',db='geodb',user='geouser',p=NA)
  
  # load
  load.project()
  ls()
  head(POA01.METDIST.FINAL.CCD.DISSOLVE)
  names(POA01.METDIST.FINAL.CCD.DISSOLVE) <- tolower(names(POA01.METDIST.FINAL.CCD.DISSOLVE))
  # do
  dbWriteTable(ch,name='poa01_metdist_final_ccd_dissolve', value=POA01.METDIST.FINAL.CCD.DISSOLVE)
  
  dbGetQuery(ch,
  "SELECT  t1.district, pdens, the_geom
  into poa_grouped_into_climatic_regions
  FROM
    public.poa01_metdist_final_dissolve_gda94 t1
  join
    public.poa01_metdist_final_ccd_dissolve t2
  on
    t1.district =
    t2.district;
  alter table poa_grouped_into_climatic_regions add column gid serial
  primary key")
  
#+end_src

*** poa and weather stations
#+name:poa and stn
#+begin_src sh :session *shell* :tangle no :exports none :eval no
###########################################################################
# newnode: poa and stn
# copy from J drive nceph datasets unres asgcshp
cd ~/data/ASGCSHP/2001/POA/
# shp2pgsql -s 4283 -D NSWPOA01.shp public.nswpoa01 > nswpoa01.sql
# psql -d geodb -U geouser -W -h 130.56.60.77 -f nswpoa01.sql

# DONT USE THE ALBERS PRJ ONE
# shp2pgsql -s XXXX -D POA01_METDIST_FINAL.shp public.poa01_metdist_final > poa01_metdist_final.sql
# psql -d pgisdb -U postgres -W -h 130.56.60.77 -f poa01_metdist_final.sql
# warning terminal not fully functional?  ran from normal terminal

#+end_src
copy from M:/Climate_Data/Projects/GE_CLIM/3_Meteorology/bomsites
cd ~/projects/POAweather/data
 shp2pgsql -s 4283 -D AllDailyBoMSites0002_GDA94.shp public.alldailybomsites0002_gda94 > alldailybomsites0002_gda94.sql
psql -d geodb -U geouser -W -h 130.56.60.77 -f alldailybomsites0002_gda94.sql
*** Weather
** EWEDB
*** landing page
gis-forum/
* New projects
** Ding2012
[[./reports/POAweather-Ding2012.org]]
** Glass2012
* publish to gislibrary / EWEDB

** get data from delphe to CSV do this on ncephsb
#+begin_src R :session *shell* :tangle no :exports none :eval no
  #### name:fill 08 10 ####
  ###########################################################################
  # newnode: do-final-run
  setwd("~/projects/POAweather")
  library(swishdbtools)
  ch <- connect2postgres2("delphe")
  for(yy in  1990:2004){
  #yy <- 1990
  
  dat  <- dbGetQuery(ch,
  sprintf("select \"POA_ID\" as poa_id, date, pwidwmaxt,pwidwmint,pwidwprec,pwidwrelhum
    from weather_bom_idw.climate_poa_%s", yy)
                     )
  str(dat)
  
  write.csv(dat, sprintf("data/climate_poa_%s.csv", yy), row.names = F)
  }
  
  yys <- "2005_2007"
  yy  <- 2005:2007
  y <- 2005
  qc <- dbGetQuery(ch,
  sprintf("select date, count(*)
    from weather_bom_idw.climate_poa_%s
    where date >= '%s-01-01' and date <= '%s-12-31'
  group by date
  order by date", yys, y, y)
                     )
  qc
  
  
  for(y in yy){
  #  y <- yy[1]
  dat  <- dbGetQuery(ch,
  sprintf("select \"POA_ID\" as poa_id, date, pwidwmaxt,pwidwmint,pwidwprec,pwidwrelhum
    from weather_bom_idw.climate_poa_%s
    where date >= '%s-01-01' and date <= '%s-12-31'", yys, y, y)
                     )
  str(dat)
  
  write.csv(dat, sprintf("data/climate_poa_%s.csv", y), row.names = F)
  }
  
  setwd("data")
  flist <- dir()
  flist
  for(fi in flist){
    print(fi)
    qc <- read.csv(fi, nrows = 10)
  print(  summary(qc$date))
  }
  
#+end_src
** setup landing page
cd /var/www/html/web2py
mkdir applications/poa_weather
cp -r applications/welcome/* applications/poa_weather
vi applications/poa_weather/views/default/index.html
cp applications/biomass_smoke_events/views/default/index.html applications/poa_weather/views/default/index.html
vi applications/poa_weather/views/default/index.html
cp /var/www/html/web2py/applications/biomass_smoke_events/models/menu.py /var/www/html/web2py/applications/poa_weather/models/
cd ../static
scp ivan_hanigan@130.56.102.53/home/ivan_hanigan/projects/POAweather/data/* /.
# open firewall breifly then close again

*** COMMENT ls-code
#+name:ls
#+begin_src R :session *R* :tangle ls.R :exports none :eval no
  #### name:ls ####
  for(yy in  1990:2007){
  #yy <- 1990
  lnk <- sprintf("climate_poa_%s.csv", yy)
  txt <- paste("<li>{{=XML(T('Download: %s',
                 A('%(application)s/static/",lnk,"'%request,
             _href=URL('static','",lnk,"'))))}}</li>",sep="")
  cat(txt)
  }
  for(yy in  1990:2007){
  #yy <- 1990
  lnk <- sprintf("climate_poa_%s.csv", yy)
  txt <- paste("scp ivan_hanigan@130.56.102.53/home/ivan_hanigan/projects/POAweather/data/",lnk,"\n",sep="")
  cat(txt)
  }
  
#+end_src
*** html
{{left_sidebar_enabled,right_sidebar_enabled=False,('message' in globals())}}
{{extend 'layout.html'}}

  {{if 'message' in globals():}}
    <h3>{{=message}}</h3>

    <h4>{{=T('Meteorological Data for Australian Postal Areas')}}</h4>
<li> CITATION: Hanigan, I. (2010). Meteorological Data for Australian Postal Areas. Australian Data Archive. doi:10.4225/13/50BBFCFE08A12 </li>
<li> METADATA: https://datacommons.anu.edu.au/DataCommons/item/anudc:2651 </li>
<li> LICENCE: CC BY 4.0 </li>

    <h4>{{=T('Data')}}</h4>
    <ol>
           <li>{{=XML(T('Download: %s',
               A('climate_poa_1990.csv'%request,
           _href=URL('static','climate_poa_1990.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_1991.csv'%request,
           _href=URL('static','climate_poa_1991.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_1992.csv'%request,
           _href=URL('static','climate_poa_1992.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_1993.csv'%request,
           _href=URL('static','climate_poa_1993.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_1994.csv'%request,
           _href=URL('static','climate_poa_1994.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_1995.csv'%request,
           _href=URL('static','climate_poa_1995.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_1996.csv'%request,
           _href=URL('static','climate_poa_1996.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_1997.csv'%request,
           _href=URL('static','climate_poa_1997.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_1998.csv'%request,
           _href=URL('static','climate_poa_1998.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_1999.csv'%request,
           _href=URL('static','climate_poa_1999.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_2000.csv'%request,
           _href=URL('static','climate_poa_2000.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_2001.csv'%request,
           _href=URL('static','climate_poa_2001.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_2002.csv'%request,
           _href=URL('static','climate_poa_2002.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_2003.csv'%request,
           _href=URL('static','climate_poa_2003.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_2004.csv'%request,
           _href=URL('static','climate_poa_2004.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_2005.csv'%request,
           _href=URL('static','climate_poa_2005.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_2006.csv'%request,
           _href=URL('static','climate_poa_2006.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_2007.csv'%request,
           _href=URL('static','climate_poa_2007.csv'))))}}</li> 
</ol>
    {{elif 'content' in globals():}}
{{=content}}
    {{else:}}
{{=BEAUTIFY(response._vars)}}
    {{pass}}

    {{block right_sidebar}}
{{=A(T("About these data"), _href=URL('static', 'index.html'), _class='btn',
         _style='margin-top: 1em;')}}
{{end}}

{{left_sidebar_enabled,right_sidebar_enabled=False,('message' in globals())}}
{{extend 'layout.html'}}

  {{if 'message' in globals():}}
    <h3>{{=message}}</h3>

    <h4>{{=T('Meteorological Data for Australian Postal Areas')}}</h4>
<li> CITATION: Hanigan, I. (2010). Meteorological Data for Australian Postal Areas. Australian Data Archive. doi:10.4225/13/50BBFCFE08A12 </li>
<li> METADATA: https://datacommons.anu.edu.au/DataCommons/item/anudc:2651 </li>
<li> LICENCE: CC BY 4.0 </li>

    <h4>{{=T('Data')}}</h4>
    <ol>
           <li>{{=XML(T('Download: %s',
               A('climate_poa_1990.csv'%request,
           _href=URL('static','climate_poa_1990.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_1991.csv'%request,
           _href=URL('static','climate_poa_1991.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_1992.csv'%request,
           _href=URL('static','climate_poa_1992.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_1993.csv'%request,
           _href=URL('static','climate_poa_1993.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_1994.csv'%request,
           _href=URL('static','climate_poa_1994.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_1995.csv'%request,
           _href=URL('static','climate_poa_1995.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_1996.csv'%request,
           _href=URL('static','climate_poa_1996.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_1997.csv'%request,
           _href=URL('static','climate_poa_1997.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_1998.csv'%request,
           _href=URL('static','climate_poa_1998.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_1999.csv'%request,
           _href=URL('static','climate_poa_1999.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_2000.csv'%request,
           _href=URL('static','climate_poa_2000.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_2001.csv'%request,
           _href=URL('static','climate_poa_2001.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_2002.csv'%request,
           _href=URL('static','climate_poa_2002.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_2003.csv'%request,
           _href=URL('static','climate_poa_2003.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_2004.csv'%request,
           _href=URL('static','climate_poa_2004.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_2005.csv'%request,
           _href=URL('static','climate_poa_2005.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_2006.csv'%request,
           _href=URL('static','climate_poa_2006.csv'))))}}</li><li>{{=XML(T('Download: %s',
               A('climate_poa_2007.csv'%request,
           _href=URL('static','climate_poa_2007.csv'))))}}</li> 
</ol>
    {{elif 'content' in globals():}}
{{=content}}
    {{else:}}
{{=BEAUTIFY(response._vars)}}
    {{pass}}

    {{block right_sidebar}}
{{=A(T("About these data"), _href=URL('static', 'index.html'), _class='btn',
         _style='margin-top: 1em;')}}
{{end}}
